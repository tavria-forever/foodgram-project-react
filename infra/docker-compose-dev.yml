version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  django:
    build: ../backend/foodgram/
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ../backend/foodgram:/app
      - static_value:/app/static/
      - media_value:/app/media/
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/frontend/
      - frontend_value:/app/frontend/build/
    depends_on:
      - django
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - ../docs/:/usr/share/nginx/html/api/docs/
      - frontend_value:/usr/share/nginx/html/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - frontend

volumes:
  static_value:
  media_value:
  frontend_value:
