name: Deploy foodgram to Yandex.Cloud

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r backend/foodgram/requirements.txt
    - name: Lint with flake8
      run: python -m flake8 backend/foodgram/

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./backend/foodgram
          tags: tavriaforever/foodgram-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: "**"
          target: "foodgram"
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd foodgram/infra
            sudo docker compose stop
            sudo docker compose rm django
            env_file=".env"
            if [ -f "$env_file" ] ; then
                rm "env_file"
            fi
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env
            echo DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }} >> .env
            sudo docker compose -f docker-compose.yml up -d

  send_message_success:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send success message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: âœ… ${{ github.workflow }} successfully completed.

  send_message_fail:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send failure message
        uses: appleboy/telegram-action@master
        if: ${{ always() && contains(needs.*.result, 'failure') }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ðŸš¨ ${{ github.workflow }} something went wrong.

